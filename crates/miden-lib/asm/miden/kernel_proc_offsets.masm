# OFFSET CONSTANTS
# -------------------------------------------------------------------------------------------------

### Account #####################################
# Entire account commitment
const.ACCOUNT_GET_INITIAL_COMMITMENT_OFFSET=0
const.ACCOUNT_GET_CURRENT_COMMITMENT_OFFSET=1

# ID
const.ACCOUNT_GET_ID_OFFSET=2

# Nonce
const.ACCOUNT_GET_NONCE_OFFSET=3                 # accessor
const.ACCOUNT_INCR_NONCE_OFFSET=4                # mutator

# Code
const.ACCOUNT_GET_CODE_COMMITMENT_OFFSET=5

# Storage
const.ACCOUNT_GET_STORAGE_COMMITMENT_OFFSET=6
const.ACCOUNT_GET_ITEM_OFFSET=7
const.ACCOUNT_SET_ITEM_OFFSET=8
const.ACCOUNT_GET_MAP_ITEM_OFFSET=9
const.ACCOUNT_SET_MAP_ITEM_OFFSET=10

# Vault
const.ACCOUNT_GET_VAULT_ROOT_OFFSET=11
const.ACCOUNT_ADD_ASSET_OFFSET=12
const.ACCOUNT_REMOVE_ASSET_OFFSET=13
const.ACCOUNT_GET_BALANCE_OFFSET=14
const.ACCOUNT_HAS_NON_FUNGIBLE_ASSET_OFFSET=15

### Faucet ######################################
const.FAUCET_MINT_ASSET_OFFSET=16
const.FAUCET_BURN_ASSET_OFFSET=17
const.FAUCET_GET_TOTAL_FUNGIBLE_ASSET_ISSUANCE_OFFSET=18
const.FAUCET_IS_NON_FUNGIBLE_ASSET_ISSUED_OFFSET=19

### Note ########################################
# assets
const.NOTE_GET_ASSETS_INFO_OFFSET=20             # accessor
const.NOTE_ADD_ASSET_OFFSET=21                   # mutator

# note parameters
const.NOTE_GET_SERIAL_NUMBER_OFFSET=22
const.NOTE_GET_INPUTS_COMMITMENT_OFFSET=23
const.NOTE_GET_SENDER_OFFSET=24
const.NOTE_GET_SCRIPT_ROOT_OFFSET=25

### Tx ##########################################
# creation
const.TX_CREATE_NOTE_OFFSET=26

# io commitments
const.TX_GET_INPUT_NOTES_COMMITMENT_OFFSET=27
const.TX_GET_OUTPUT_NOTES_COMMITMENT_OFFSET=28

# block info
const.TX_GET_BLOCK_COMMITMENT_OFFSET=29
const.TX_GET_BLOCK_NUMBER_OFFSET=30
const.TX_GET_BLOCK_TIMESTAMP_OFFSET=31

# foreign context
const.TX_START_FOREIGN_CONTEXT_OFFSET=32
const.TX_END_FOREIGN_CONTEXT_OFFSET=33

# expiration data
const.TX_GET_EXPIRATION_DELTA_OFFSET=34          # accessor
const.TX_UPDATE_EXPIRATION_BLOCK_NUM_OFFSET=35   # mutator

### ASSET ##########################################

const.ASSET_CREATE_OFFSET=36
const.ASSET_CONSUME_ONE_TIME_WITNESS_OFFSET=37
const.ASSET_SET_FIELD_OFFSET=38
const.GET_NATIVE_ACCOUNT_ID_OFFSET=39
const.ASSET_STORE_TO_ACCOUNT_OFFSET=40
const.ASSET_GET_ISSUER_OFFSET=41
const.ASSET_GET_TYPE_OFFSET=42
const.ASSET_GET_NUM_FIELDS_OFFSET=43
const.ASSET_GET_FIELD_OFFSET=44
const.ASSET_LOAD_FROM_ACCOUNT_OFFSET=45
const.ASSET_GET_ID_OFFSET=46
const.ASSET_DESTROY_OFFSET=47

# ACCESSORS
# -------------------------------------------------------------------------------------------------

### ACCOUNT #####################################

#! Returns the offset of the `account_get_initial_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_initial_commitment` kernel procedure required to get
#!   the address where this procedure is stored.
export.account_get_initial_commitment_offset
    push.ACCOUNT_GET_INITIAL_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_get_current_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_current_commitment` kernel procedure required to get
#!   the address where this procedure is stored.
export.account_get_current_commitment_offset
    push.ACCOUNT_GET_CURRENT_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_get_id` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_id` kernel procedure required to get the address
#!   where this procedure is stored.
export.account_get_id_offset
    push.ACCOUNT_GET_ID_OFFSET
end

#! Returns the offset of the `account_get_nonce` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_nonce` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_nonce_offset
    push.ACCOUNT_GET_NONCE_OFFSET
end

#! Returns the offset of the `account_incr_nonce` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_incr_nonce` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_incr_nonce_offset
    push.ACCOUNT_INCR_NONCE_OFFSET
end

#! Returns the offset of the `account_get_code_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_code_commitment` kernel procedure required to get
#!   the address where this procedure is stored.
export.account_get_code_commitment_offset
    push.ACCOUNT_GET_CODE_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_get_storage_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_storage_commitment` kernel procedure required to
#!   get the address where this procedure is stored.
export.account_get_storage_commitment_offset
    push.ACCOUNT_GET_STORAGE_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_get_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_item_offset
    push.ACCOUNT_GET_ITEM_OFFSET
end

#! Returns the offset of the `account_set_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_set_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_set_item_offset
    push.ACCOUNT_SET_ITEM_OFFSET
end

#! Returns the offset of the `account_get_map_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_map_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_map_item_offset
    push.ACCOUNT_GET_MAP_ITEM_OFFSET
end

#! Returns the offset of the `account_set_map_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_set_map_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_set_map_item_offset
    push.ACCOUNT_SET_MAP_ITEM_OFFSET
end

#! Returns the offset of the `account_get_vault_root` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_vault_root` kernel procedure required to
#!   get the address where this procedure is stored.
export.account_get_vault_root_offset
    push.ACCOUNT_GET_VAULT_ROOT_OFFSET
end

#! Returns the offset of the `account_add_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_add_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_add_asset_offset
    push.ACCOUNT_ADD_ASSET_OFFSET
end

#! Returns the offset of the `account_remove_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_remove_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_remove_asset_offset
    push.ACCOUNT_REMOVE_ASSET_OFFSET
end

#! Returns the offset of the `account_get_balance` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_balance` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_balance_offset
    push.ACCOUNT_GET_BALANCE_OFFSET
end

#! Returns the offset of the `account_has_non_fungible_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_has_non_fungible_asset` kernel procedure required to
#!   get the address where this procedure is stored.
export.account_has_non_fungible_asset_offset
    push.ACCOUNT_HAS_NON_FUNGIBLE_ASSET_OFFSET
end

### FAUCET ######################################

#! Returns the offset of the `faucet_mint_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_mint_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.faucet_mint_asset_offset
    push.FAUCET_MINT_ASSET_OFFSET
end

#! Returns the offset of the `faucet_burn_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_burn_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.faucet_burn_asset_offset
    push.FAUCET_BURN_ASSET_OFFSET
end

#! Returns the offset of the `faucet_get_total_fungible_asset_issuance` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_get_total_fungible_asset_issuance` kernel procedure
#!   required to get the address where this procedure is stored.
export.faucet_get_total_fungible_asset_issuance_offset
    push.FAUCET_GET_TOTAL_FUNGIBLE_ASSET_ISSUANCE_OFFSET
end

#! Returns the offset of the `faucet_is_non_fungible_asset_issued` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_is_non_fungible_asset_issued` kernel procedure
#!   required to get the address where this procedure is stored.
export.faucet_is_non_fungible_asset_issued_offset
    push.FAUCET_IS_NON_FUNGIBLE_ASSET_ISSUED_OFFSET
end

### NOTE ########################################

#! Returns the offset of the `note_get_assets_info` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `note_get_assets_info` kernel procedure required to get the
#!   address where this procedure is stored.
export.note_get_assets_info_offset
    push.NOTE_GET_ASSETS_INFO_OFFSET
end

#! Returns the offset of the `note_add_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `note_add_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.note_add_asset_offset
    push.NOTE_ADD_ASSET_OFFSET
end

#! Returns the offset of the `note_get_serial_number` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `note_get_serial_number` kernel procedure required to get the
#!   address where this procedure is stored.
export.note_get_serial_number_offset
    push.NOTE_GET_SERIAL_NUMBER_OFFSET
end

#! Returns the offset of the `note_get_inputs_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `note_get_inputs_commitment` kernel procedure required to get the
#!   address where this procedure is stored.
export.note_get_inputs_commitment_offset
    push.NOTE_GET_INPUTS_COMMITMENT_OFFSET
end

#! Returns the offset of the `note_get_sender` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `note_get_sender` kernel procedure required to get the address
#!   where this procedure is stored.
export.note_get_sender_offset
    push.NOTE_GET_SENDER_OFFSET
end

#! Returns the offset of the `note_get_script_root` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `note_get_script_root` kernel procedure required to get the
#!   address where this procedure is stored.
export.note_get_script_root_offset
    push.NOTE_GET_SCRIPT_ROOT_OFFSET
end

### TRANSACTION #################################

#! Returns the offset of the `tx_create_note` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_create_note` kernel procedure required to get the address
#!   where this procedure is stored.
export.tx_create_note_offset
    push.TX_CREATE_NOTE_OFFSET
end

#! Returns the offset of the `tx_get_input_notes_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_input_notes_commitment` kernel procedure required to
#!   get the address where this procedure is stored.
export.tx_get_input_notes_commitment_offset
    push.TX_GET_INPUT_NOTES_COMMITMENT_OFFSET
end

#! Returns the offset of the `tx_get_output_notes_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_output_notes_commitment` kernel procedure required to
#!   get the address where this procedure is stored.
export.tx_get_output_notes_commitment_offset
    push.TX_GET_OUTPUT_NOTES_COMMITMENT_OFFSET
end

#! Returns the offset of the `tx_get_block_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_block_commitment` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_block_commitment_offset
    push.TX_GET_BLOCK_COMMITMENT_OFFSET
end

#! Returns the offset of the `tx_get_block_number` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_block_number` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_block_number_offset
    push.TX_GET_BLOCK_NUMBER_OFFSET
end

#! Returns the offset of the `tx_get_block_timestamp` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_block_timestamp` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_block_timestamp_offset
    push.TX_GET_BLOCK_TIMESTAMP_OFFSET
end

#! Returns the offset of the `tx_start_foreign_context` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_start_foreign_context` kernel procedure required to get
#!   the address where this procedure is stored.
export.tx_start_foreign_context_offset
    push.TX_START_FOREIGN_CONTEXT_OFFSET
end

#! Returns the offset of the `tx_end_foreign_context` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_end_foreign_context` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_end_foreign_context_offset
    push.TX_END_FOREIGN_CONTEXT_OFFSET
end

#! Returns the offset of the `tx_update_expiration_block_num` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_update_expiration_block_num` kernel procedure required to
#!   get the address where this procedure is stored.
export.tx_update_expiration_block_num_offset
    push.TX_UPDATE_EXPIRATION_BLOCK_NUM_OFFSET
end

#! Returns the offset of the `tx_get_expiration_delta` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_expiration_delta` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_expiration_delta_offset
    push.TX_GET_EXPIRATION_DELTA_OFFSET
end

export.asset_create_offset
    push.ASSET_CREATE_OFFSET
end

export.asset_consume_one_time_witness_offset
    push.ASSET_CONSUME_ONE_TIME_WITNESS_OFFSET
end

export.asset_set_field_offset
    push.ASSET_SET_FIELD_OFFSET
end

export.asset_get_field_offset
    push.ASSET_GET_FIELD_OFFSET
end

export.get_native_account_id_offset
  push.GET_NATIVE_ACCOUNT_ID_OFFSET
end

export.asset_store_to_account_offset
  push.ASSET_STORE_TO_ACCOUNT_OFFSET
end

export.asset_get_issuer_offset
  push.ASSET_GET_ISSUER_OFFSET
end

export.asset_get_type_offset
  push.ASSET_GET_TYPE_OFFSET
end

export.asset_get_num_fields_offset
  push.ASSET_GET_NUM_FIELDS_OFFSET
end

export.asset_load_from_account
  push.ASSET_LOAD_FROM_ACCOUNT_OFFSET
end

export.asset_get_id_offset
  push.ASSET_GET_ID_OFFSET
end

export.asset_destroy_offset
  push.ASSET_DESTROY_OFFSET
end